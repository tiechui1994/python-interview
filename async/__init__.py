"""
基本概念:
    阻塞: 程序在等待某个操作完成期间,自身无法继续干别的事情,则称该程序在该操作上是阻塞的.
        常见的阻塞方式: 网络IO阻塞, 磁盘IO阻塞, 用户输入阻塞等.

    非阻塞: 程序在等待某操作过程中,自身不被阻塞,可以继续运行干别的事情.则称该程序在该操作上是非阻塞的.
        仅当程序封装的级别可以囊括独立的子程序单元时,它才可能存在非阻塞状态.


    同步: 不同的程序单元为了完成某个任务,在执行过程中需要某种通信方式以协调一致,称这些程序单元是同步执行的. 即,同步意味着有序
    异步: 为了完成某个任务,不同程序单元之间过程中无需通信协调,也能完成任务的方式. 即,异步意味着无序

    注: 上文提到的 “通信方式” 通常是指异步和并发编程提供的同步原语,如信号量、锁、同步队列等等.


    并发: 并发描述的是程序的组织结构. 指程序要被设计成多个可独立执行的子任务. 利用有限的计算资源使多个任务实时执行.
    并行: 并行描述的是程序的执行状态. 指多个任务同时被执行. 利用cpu加速完成多个任务的目的


    并行是为了利用多核加速多任务完成的进度
    并发是为了让独立的子任务都有机会被尽快执行，但不一定能加速整体进度
    非阻塞是为了提高程序整体执行效率
    异步是高效地组织非阻塞任务的方式

    高并发 => 拆分多任务 => 不同的任务有阻塞/非阻塞, 同步/异步
"""
